Avec Symfony. J'ai une entity "Position" (elle représente un emplacement au camping de l'espadrille volante) qui est reliée par son champs "type" à une seconde entity "Type" (celle-ci représente le type d'emplacement, exemple : mobil-home 3 places, caravane 2 places...). Dans un premier temps, je voudrais afficher en front (grâce au FrontController et un template twig) la liste de toutes les "positions" disponibles à la location (dans l'entity Position il existe un champ "active" de type boolean). Quel est le code à écrire dans le PositionRepository, dans le FrontController et dans le template positions.html.twig ?

Sur la page listant toutes les "positions" active, je voudrais ajouter un petit formulaire permettant de filtrer les "positions" sans avoir à recharger la page. Les critères de filtre sont (pour le moment) les suivants : par types de positions, par capacité maximale (champ "capacity" dans l'entity "Type"). Plus tard, on ajoutera la disponibilité.

Pour corriger les erreurs, nous allons reprendre depuis le début, je pense que ce sera plus efficace. Je vais alors préciser la configuration de mes entity. l'entity "Position" comporte les champs (colonnes) suivants : id (integer); name (string); slug (string); owner (ManyToOne(inversedBy: 'positions')); description (string); createdAt (DateTimeImmutable); updatedAt (DateTimeImmutable); image (string); active (boolean); type (ManyToOne(inversedBy: 'positions')); bookings (OneToMany(mappedBy: 'position', targetEntity: Booking::class)). l'entity "Type" comporte les champs (colones) suivants : id (integer); name (string); slug (string); capacity (integer); description (string); createdAt (DateTimeImmutable); updatedAt (DateTimeImmutable); active (boolean); positions (OneToMany(mappedBy: 'type', targetEntity: Position::class)); price (integer). Il existe deux autres Entity (Option et Booking) sur lesquelles nous reviendrons plus tard. Il existe un Controller "FrontController" qui se charge de l'affichage en front dans lequel il y a une public function "positions" dont l'objectif est d'afficher (via un template "positions.html.twig") la liste de toutes les positions active (active=1) qui pourront être filtrées : par type, par capacité maximale (colonne "capacity" dans Type), par prix (colonne "price" dans Type) grâce à un petit formulaire affiché sur la page de résultat (dans le template "positions.html.twig").

Maintenant, je voudrais créer dans FrontController une nouvelle public function "position" qui aura pour objectif d'afficher le détail d'une "position" en construisant une route à partir du champ "slug" de Position. La route se nommera "app_position" et sera sous la forme "/positions/slug". Sur la page qui affiche les résultats des positions, j'ajouterai pour chaque position un bouton permettant d'afficher la page de détail de la position concernée.

Maintenant, dans la même idée, je voudrais créer dans FrontController une nouvelle public function "positions_type" qui aura pour objectif d'afficher sur une page (un template .html.twig) la liste des positions correspondant à ce type. La définition de la route est dans le controller, elles de forme /slug, son nom est "app_positions_type". Il faut écrire le petit tag twig qui permettra d'afficher un lien vers la route d'un type

Maintenant, j'ai créée une Entity "Booking", celle-ci est destinée à permettre la réservation d'une "position" (Entity Position) en fonction d'un calendrier des disponibilités. L'entity "Booking" comporte les champs (colonnes) suivants : id (integer); checkin (date d'arrivée)(type: Types::DATE_MUTABLE); checkout (date de départ)(type: Types::DATE_MUTABLE); firstname (string); lastname (string); email (string); phone (string); address (string); zipcode (string); city (string); adults (integer); childs (integer);  poolAdult (integer);  poolChild (integer); position (ManyToOne(inversedBy: 'bookings')); createdAt (datetime); updatedAt (datetime). Sur le template qui affiche le détail d'une position (front/position.html.twig), dans une sidebar, je veux afficher un formulaire de recherche de disponnibilité correspondant à la position. Pour cela, j'ai créé le Controller BookingController. Ce formulaire doit permettre de sélectionner une date d'arrivée (checkin) et une date de départ (checkout) comprise entre le 05 mai et le 10 octobre inclus, il serait nécessaire de vérifier dans la table Booking si la "position" concernée est disponible pour les dates checkin et checkout renseignée. Si les dates ne sont pas disponnibles un message d'erreur signale que la positionn'est pas disponnible pour ces dates. Si les dates sont disponnibles, alors un second formulaire est affiché pour renseigner les informations nécessaires pour confirmer la réservation : Nombre d'adultes (colone "adults") nombre d'enfants (colone "childs"); nombre de tickets adultes pour la piscine (poolAdult); nombre de tickets enfants pour la piscine (poolChild); Prénom (firstname); Nom (lastname); Adresse e-mail (email); téléphone (phone); adresse (address); code postal (zipcode); ville (city); un bouton "confirmer la réservation". Lorsque le bouton "confirmer la réservation" est cliqué", une insertion de la réservation est effectuée dans la base de données et un message de succès est affiché à l'utilisateur.
